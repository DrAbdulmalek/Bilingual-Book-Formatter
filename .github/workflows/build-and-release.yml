name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to build'
        required: true
        default: 'manual'

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
        
    - name: Build Windows executable
      run: |
        python build_windows_executable.py
        
    - name: Create installer package
      run: |
        mkdir BilingualBookFormatter_Package
        copy dist\BilingualBookFormatter.exe BilingualBookFormatter_Package\
        copy run_gui.bat BilingualBookFormatter_Package\ 2>nul || echo "run_gui.bat not found"
        copy run_web.bat BilingualBookFormatter_Package\ 2>nul || echo "run_web.bat not found"
        copy run_cli.bat BilingualBookFormatter_Package\ 2>nul || echo "run_cli.bat not found"
        copy README.md BilingualBookFormatter_Package\
        copy config.json BilingualBookFormatter_Package\ 2>nul || echo "config.json not found"
        xcopy bilingual-formatter-web BilingualBookFormatter_Package\bilingual-formatter-web\ /E /I 2>nul || echo "Web interface not found"
        
    - name: Create README for package
      run: |
        echo "# Bilingual Book Formatter v2.4" > BilingualBookFormatter_Package\README_Package.txt
        echo "" >> BilingualBookFormatter_Package\README_Package.txt
        echo "## طريقة الاستخدام:" >> BilingualBookFormatter_Package\README_Package.txt
        echo "" >> BilingualBookFormatter_Package\README_Package.txt
        echo "### 1. الواجهة الرسومية:" >> BilingualBookFormatter_Package\README_Package.txt
        echo "- تشغيل ملف BilingualBookFormatter.exe" >> BilingualBookFormatter_Package\README_Package.txt
        echo "" >> BilingualBookFormatter_Package\README_Package.txt
        echo "### 2. الواجهة الويب:" >> BilingualBookFormatter_Package\README_Package.txt
        echo "- تثبيت Node.js من https://nodejs.org" >> BilingualBookFormatter_Package\README_Package.txt
        echo "- تشغيل run_web.bat" >> BilingualBookFormatter_Package\README_Package.txt
        echo "" >> BilingualBookFormatter_Package\README_Package.txt
        echo "### 3. سطر الأوامر:" >> BilingualBookFormatter_Package\README_Package.txt
        echo "- تشغيل run_cli.bat" >> BilingualBookFormatter_Package\README_Package.txt
        echo "" >> BilingualBookFormatter_Package\README_Package.txt
        echo "## المتطلبات:" >> BilingualBookFormatter_Package\README_Package.txt
        echo "- Windows 10 أو أحدث" >> BilingualBookFormatter_Package\README_Package.txt
        echo "- Node.js (للواجهة الويب)" >> BilingualBookFormatter_Package\README_Package.txt
        echo "" >> BilingualBookFormatter_Package\README_Package.txt
        echo "تم التطوير بواسطة د. عبدالمالك تامر الحسيني" >> BilingualBookFormatter_Package\README_Package.txt
        
    - name: Archive Windows package
      run: |
        Compress-Archive -Path BilingualBookFormatter_Package\* -DestinationPath BilingualBookFormatter_Windows.zip
        
    - name: Upload Windows artifact
      uses: actions/upload-artifact@v4
      with:
        name: Windows-Package
        path: |
          BilingualBookFormatter_Windows.zip
          dist/BilingualBookFormatter.exe

  build-linux:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-pyqt6 python3-pyqt6.qtwidgets python3-pip
        sudo apt-get install -y poppler-utils python3-pypdf2 python3-pil python3-bs4
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Run tests
      run: |
        python -m pytest tests/ || echo "No tests found or tests failed"
        
    - name: Create Linux package
      run: |
        mkdir BilingualBookFormatter_Linux
        cp -r . BilingualBookFormatter_Linux/
        # Remove unnecessary files
        rm -rf BilingualBookFormatter_Linux/.git
        rm -rf BilingualBookFormatter_Linux/.github
        rm -rf BilingualBookFormatter_Linux/__pycache__
        rm -rf BilingualBookFormatter_Linux/.pytest_cache
        find BilingualBookFormatter_Linux -name "*.pyc" -delete
        
    - name: Archive Linux package
      run: |
        tar -czf BilingualBookFormatter_Linux.tar.gz BilingualBookFormatter_Linux/
        
    - name: Upload Linux artifact
      uses: actions/upload-artifact@v4
      with:
        name: Linux-Package
        path: BilingualBookFormatter_Linux.tar.gz

  create-release:
    needs: [build-windows, build-linux]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./artifacts
        
    - name: Create release notes
      run: |
        echo "# Bilingual Book Formatter ${GITHUB_REF#refs/tags/}" > release_notes.md
        echo "" >> release_notes.md
        echo "## التحسينات في هذا الإصدار:" >> release_notes.md
        echo "" >> release_notes.md
        echo "- ✅ إصلاح مشاكل الواجهة الرسومية على Linux" >> release_notes.md
        echo "- ✅ تحسين Windows installer مع التحميل التلقائي" >> release_notes.md
        echo "- ✅ واجهة ويب محسنة مع React" >> release_notes.md
        echo "- ✅ دعم أفضل للغة العربية وRTL" >> release_notes.md
        echo "- ✅ أدوات تشخيص وإصلاح المشاكل" >> release_notes.md
        echo "" >> release_notes.md
        echo "## طريقة التثبيت:" >> release_notes.md
        echo "" >> release_notes.md
        echo "### Windows:" >> release_notes.md
        echo "1. حمّل BilingualBookFormatter_Windows.zip" >> release_notes.md
        echo "2. استخرج الملفات وشغّل BilingualBookFormatter.exe" >> release_notes.md
        echo "" >> release_notes.md
        echo "### Linux:" >> release_notes.md
        echo "1. حمّل BilingualBookFormatter_Linux.tar.gz" >> release_notes.md
        echo "2. استخرج الملفات: tar -xzf BilingualBookFormatter_Linux.tar.gz" >> release_notes.md
        echo "3. شغّل: cd BilingualBookFormatter_Linux && ./scripts/install_arch.sh" >> release_notes.md
        echo "4. شغّل الواجهة: ./run_gui.sh" >> release_notes.md
        echo "" >> release_notes.md
        echo "## الدعم:" >> release_notes.md
        echo "- GitHub Issues: https://github.com/DrAbdulmalek/Bilingual-Book-Formatter/issues" >> release_notes.md
        echo "- التوثيق: https://github.com/DrAbdulmalek/Bilingual-Book-Formatter/blob/main/README.md" >> release_notes.md
        
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          ./artifacts/Windows-Package/BilingualBookFormatter_Windows.zip
          ./artifacts/Windows-Package/BilingualBookFormatter.exe
          ./artifacts/Linux-Package/BilingualBookFormatter_Linux.tar.gz
        body_path: release_notes.md
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  notify-completion:
    needs: [create-release]
    runs-on: ubuntu-latest
    if: always()
    steps:
    - name: Notify completion
      run: |
        if [ "${{ needs.create-release.result }}" == "success" ]; then
          echo "✅ تم بناء ونشر الإصدار بنجاح!"
          echo "الملفات متاحة في: https://github.com/${{ github.repository }}/releases"
        else
          echo "❌ فشل في بناء أو نشر الإصدار"
          echo "يرجى مراجعة سجلات البناء"
        fi

